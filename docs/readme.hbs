# @CentralPing/http-redirect

[![Build Status](https://travis-ci.org/CentralPing/http-redirect.svg?branch=master)](https://travis-ci.org/CentralPing/http-redirect)
[![Coverage Status](https://coveralls.io/repos/github/CentralPing/http-redirect/badge.svg)](https://coveralls.io/github/CentralPing/http-redirect)
[![Dependency Status](https://david-dm.org/CentralPing/http-redirect.svg)](https://david-dm.org/CentralPing/http-redirect)
[![Greenkeeper Status](https://badges.greenkeeper.io/CentralPing/http-redirect.svg)](https://greenkeeper.io/)
[![Known Vulnerabilities](https://snyk.io/test/github/centralping/http-redirect/badge.svg)](https://snyk.io/test/github/centralping/http-redirect)

An HTTP request handler for node [`http.Server`](https://nodejs.org/api/http.html#http_class_http_server) style servers. It automatically sets the correct status code and headers for a response. Function invoctioners will still need to end the request manually.

## Notes

* The redirect URL is required.
* No safeguards against looped redirects.

## Installation

`npm i --save @centralping/http-redirect`

## API Reference

{{#module name="httpRedirect"~}}
{{>body~}}
{{>members~}}
{{/module}}

## Examples

### Simple

```js
const redirect = require('@centralping/http-redirect');

const redirector = redirect('https://foo.bar');

const server = someServerCreator();

// Redirect all the things
server.route('*', (req, res) => {
  // Do something interesting perhaps?
  // ...

  // Redirect this request
  redirector(req, res);

  // Important!!
  // End the response to send it on its merry way
  res.end();
});
```

### Middleware

```js
const redirect = require('@centralping/http-redirect');

const redirector = redirect('https://foo.bar');

const server = someServerCreator();

// Redirect all the things
server.route('*', redirector, (req, res) => res.end());
```

## Test

`npm test`

With coverage reporting:

`npm test -- --coverage`

With file watch:

`npm run watch`

## License

MIT
